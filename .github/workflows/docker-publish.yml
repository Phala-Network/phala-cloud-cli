name: Docker Publish

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v', e.g., v1.0, v2.1.3

env:
  # Define your Docker Hub image name here (e.g., yourusername/phala-cloud-cli)
  # Make sure this matches the repository you want to push to.
  DOCKER_IMAGE_NAME: phalanetwork/phala-cloud-cli

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to container registries

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        # Enables emulation for building non-native architectures
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        # Sets up the Docker builder instance for multi-arch builds
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        # Uses secrets to log in securely
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Use a Docker Hub access token

      - name: Extract metadata (tags, labels) for Docker
        # Automatically generates tags based on the Git tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            # Tag with the git tag (e.g., v1.0.0)
            type=ref,event=tag
            # Also tag with 'latest'
            type=raw,value=latest,enable={{is_default_branch}} # or enable=true if you always want latest on tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64 # Define target platforms
          push: true # Actually push the image
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by metadata-action
          cache-from: type=gha # Enable build cache from GitHub Actions
          cache-to: type=gha,mode=max # Enable writing cache
